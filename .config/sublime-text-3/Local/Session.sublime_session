{
	"folder_history":
	[
		"/home/ben/Dropbox/cs252/lab3-src",
		"/home/ben/Dropbox/cs252/lab2-src",
		"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src",
		"/home/ben/Dropbox/cs471/hw/hw1",
		"/home/ben/Dropbox/dev/midi",
		"/home/ben/Dropbox/cs252/lab1-src",
		"/var/www/html/dev/cookbook",
		"/home/ben/Dropbox/cs422/spring14/lab02",
		"/home/ben/Dropbox/cs422/spring14/lab01",
		"/home/ben/Dropbox/c repo/stub",
		"/home/ben/Dropbox/cs473/project/parser",
		"/home/ben/Desktop/new/home/ben/workspace/r/fastr/com.oracle.truffle.r.nodes/src/com/oracle/truffle/r/nodes/builtin/base",
		"/home/ben/Dropbox/cs251/lab3-src",
		"/home/ben/Dropbox/cs251/lab4-src",
		"/home/ben/workspace/r/fastr/com.oracle.truffle.r.nodes/src/com/oracle/truffle/r/nodes/builtin/base/R",
		"/home/ben/Dropbox/cs251/lab2-src/lab2-src/turnin",
		"/home/ben/Dropbox/cs251/lab2-src",
		"/home/ben/Dropbox/cs251/lab1-src"
	],
	"last_version": 3065,
	"last_window_id": 164,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1024.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"p",
						"prefix"
					],
					[
						"expa",
						"expandWildcard"
					],
					[
						"c",
						"component"
					],
					[
						"reg_",
						"regex_t"
					],
					[
						"yy",
						"yyerrok"
					],
					[
						"fo",
						"for"
					],
					[
						"ST",
						"STDOUT_FILENO"
					],
					[
						"_",
						"_simpleCommands"
					],
					[
						"chil",
						"childPid"
					],
					[
						"Exec",
						"execvp"
					],
					[
						"pr",
						"printf	printf …"
					],
					[
						"def",
						"defaultin"
					],
					[
						"prin",
						"printenv"
					],
					[
						"sim",
						"_simpleCommands"
					],
					[
						"wait",
						"waitpid"
					],
					[
						"S",
						"STDERR_FILENO"
					],
					[
						"re",
						"redirect"
					],
					[
						"out",
						"outfd"
					],
					[
						"er",
						"_errFile"
					],
					[
						"_n",
						"_numberOfSimpleCommands"
					],
					[
						"get",
						"getName"
					],
					[
						"sym",
						"foundSymbol"
					],
					[
						"ass",
						"assignValue"
					],
					[
						"glo",
						"global_env"
					],
					[
						"AS",
						"ASTNode"
					],
					[
						"gl",
						"global_env"
					],
					[
						"set",
						"setFuncName"
					],
					[
						"ifz",
						"ifz_node"
					],
					[
						"dec",
						"dec_node"
					],
					[
						"inc",
						"inc_node"
					],
					[
						"arg",
						"arg_node"
					],
					[
						"as",
						"assignValue"
					],
					[
						"res",
						"resolved"
					],
					[
						"f",
						"funcName"
					],
					[
						"rs",
						"resolved"
					],
					[
						"a",
						"arg_node"
					],
					[
						"reso",
						"resolve"
					],
					[
						"A",
						"ASTNode"
					],
					[
						"getF",
						"getFuncName"
					],
					[
						"func",
						"funcName"
					],
					[
						"fun",
						"funcName"
					],
					[
						"cu",
						"currentFunc"
					],
					[
						"FUN",
						"FUNC_DECL"
					],
					[
						"nu",
						"numArgs"
					],
					[
						"num",
						"numArgs"
					],
					[
						"getA",
						"getArgNameByIndex"
					],
					[
						"C",
						"CFLAGS"
					],
					[
						"ast",
						"ast_decl"
					],
					[
						"c_",
						"c_args"
					],
					[
						"NO",
						"nodeType"
					],
					[
						"N",
						"NUMBER"
					],
					[
						"add",
						"addArg"
					],
					[
						"node",
						"nodeType"
					],
					[
						"no",
						"nodeType"
					],
					[
						"exp",
						"exprs"
					],
					[
						"Var",
						"VAR"
					],
					[
						"ex",
						"exprs"
					],
					[
						"str",
						"string_val"
					],
					[
						"AST",
						"ASTNode"
					],
					[
						"cl",
						"CLOSEPAR"
					],
					[
						"EX",
						"exprs"
					],
					[
						"ne",
						"_next"
					],
					[
						"vi",
						"vDivOther"
					],
					[
						"M",
						"MEM_HEAP"
					],
					[
						"MEM_",
						"MEM_STACK"
					],
					[
						"tesr",
						"test_part2"
					],
					[
						"st",
						"strdup2"
					],
					[
						"cre",
						"create_and_free"
					],
					[
						"h",
						"hamsalad"
					],
					[
						"strd",
						"strdup32"
					],
					[
						"st1",
						"str1"
					],
					[
						"tes",
						"test_queue"
					],
					[
						"de",
						"dequeue"
					],
					[
						"si",
						"size_t"
					],
					[
						"wo",
						"workspace_backup"
					],
					[
						"co",
						"compFunc"
					],
					[
						"test_",
						"test_stack"
					],
					[
						"mys",
						"mystack"
					],
					[
						"test",
						"test_stack"
					],
					[
						"new",
						"newNode"
					],
					[
						"Lis",
						"ListNode"
					],
					[
						"eleme",
						"elementSize"
					],
					[
						"ele",
						"elementSize"
					],
					[
						"au",
						"autoCorrelation"
					],
					[
						"ab",
						"abAudioData"
					],
					[
						"note",
						"noteIndexToString"
					],
					[
						"ca",
						"calcOctave"
					],
					[
						"b",
						"buildIntervals"
					],
					[
						"getT",
						"getTripletEighthNoteTicks"
					],
					[
						"getTrip",
						"getTripletSixteenthNoteTicks"
					],
					[
						"inter",
						"buildIntervals"
					],
					[
						"midi",
						"midiNoteIndex"
					],
					[
						"Cr",
						"ChromaticScale"
					],
					[
						"o",
						"octave"
					],
					[
						"pri",
						"println"
					],
					[
						"pl",
						"playChord"
					],
					[
						"min",
						"minorSteps"
					],
					[
						"majo",
						"majorSteps"
					],
					[
						"mi",
						"minorSteps"
					],
					[
						"Mi",
						"MidiEditor"
					],
					[
						"m",
						"majorScale"
					],
					[
						"ma",
						"majorSteps"
					],
					[
						"String",
						"StringBuilder"
					],
					[
						"Midi",
						"MidiMessage"
					],
					[
						"wr",
						"writer"
					],
					[
						"write",
						"writeResults"
					],
					[
						"wav",
						"parsonCodeWav"
					],
					[
						"file",
						"fileName"
					],
					[
						"Proe",
						"ProcessBuilder"
					],
					[
						"quer",
						"queryDatabase"
					],
					[
						"pars",
						"parsonCode"
					],
					[
						"Str",
						"StringBuilder"
					],
					[
						"Ke",
						"KeyEvent"
					],
					[
						"K",
						"KeyEvent"
					],
					[
						"r",
						"recording"
					],
					[
						"match",
						"matchBit"
					],
					[
						"sta",
						"state"
					],
					[
						"E",
						"Exception"
					],
					[
						"que",
						"queryDatabase"
					],
					[
						"St",
						"StringTokenizer"
					],
					[
						"com",
						"compOne"
					],
					[
						"l",
						"len1"
					],
					[
						"rea",
						"read_buf"
					],
					[
						"read",
						"read_buf"
					],
					[
						"read_",
						"read_count"
					],
					[
						"read_buf",
						"read_buf_size"
					],
					[
						"printU",
						"printUsage"
					],
					[
						"len",
						"lenStr2"
					]
				]
			},
			"build_system": "Packages/C++/C++.sublime-build",
			"command_palette":
			{
				"height": 392.0,
				"selected_items":
				[
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"lin",
						"SublimeLinter: Enable Debug Mode"
					],
					[
						"lint",
						"SublimeLinter: Show All Errors"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 594.0,
				"history":
				[
					"mport urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/hah.key",
				"/home/ben/Dropbox/cs252/lab3-src/regular.cc",
				"/home/ben/Dropbox/cs252/lab3-src/shell.l",
				"/home/ben/Dropbox/cs252/lab3-src/Makefile",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/Makefile",
				"/home/ben/Dropbox/cs252/lab3-src/wildcards.cc",
				"/home/ben/Dropbox/cs252/lab3-src/shell.y",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testall",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test1",
				"/home/ben/Dropbox/cs252/lab3-src/command.cc",
				"/home/ben/Dropbox/cs471/hw/hw3.txt",
				"/home/ben/Dropbox/notes.txt",
				"/home/ben/Dropbox/numbers.txt",
				"/home/ben/Dropbox/mergesort.cpp",
				"/home/ben/volwheel-0.2.8/install.sh",
				"/home/ben/.config/openbox/rc.xml",
				"/home/ben/.config/openbox/menu.xml",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testio",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testpipes",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testzombies",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testenv",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testwordschars",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testcd",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testwildcards",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testquotesescape",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testctlc",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testrobustness",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testsubshell",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testtilde",
				"/home/ben/.conky/startconky.sh",
				"/home/ben/Downloads/Ardis Basic Icon Theme/Ardis Basic Icon Theme/index.theme",
				"/home/ben/Downloads/Ardis Basic Icon Theme/index.theme",
				"/home/ben/.cache/.fr-6S3NiM/conkyrings/README",
				"/home/ben/bin/conky/clock_rings.lua",
				"/home/ben/.conky/config_0",
				"/home/ben/Dropbox/cs252/lab3-src/csh-in",
				"/home/ben/Desktop/conkyrings/startconky.sh",
				"/home/ben/.cache/.fr-rbvhDB/conkyrings/README",
				"/home/ben/.cache/.fr-M6INEa/conkyrings/notes",
				"/home/ben/Dropbox/cs307/impromptune/backup/Composition.java",
				"/home/ben/Dropbox/cs307/impromptune/backup/NoteHandler.java",
				"/home/ben/Dropbox/cs307/impromptune/backup/Sandbox.java",
				"/home/ben/Dropbox/ma265/hw4.txt",
				"/home/ben/Dropbox/ma265/hw3.txt",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test4",
				"/home/ben/Dropbox/cs252/lab3-src/README",
				"/home/ben/Dropbox/cs252/lab3-src/command.h",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test15",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test13",
				"/home/ben/Dropbox/cs252/lab2-src/test.f",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/ast.h",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.ll",
				"/home/ben/Dropbox/cs252/lab2-src/fiz.yy",
				"/home/ben/Dropbox/cs252/lab3-src/readme",
				"/home/ben/Dropbox/cs307/impromptune/Zong/desktop/build/classes/main/com/xenoage/zong/desktop/io/mp3/out/Mp3ScoreDocFileOutput.class",
				"/home/ben/Dropbox/cs240/projectD/reader.c",
				"/home/ben/Dropbox/cs252/lab3-src/out",
				"/home/ben/Dropbox/cs252/summer fall 2014/detect_cycle.cpp",
				"/home/ben/Dropbox/cs252/lab3-src/lsgrep.c",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/grammar_tests",
				"/home/ben/Dropbox/cs252/lab3-src/ctrl-c.cc",
				"/home/ben/Dropbox/cs471/hw/hw2.txt",
				"/home/ben/Dropbox/cs307/impromptune/Zong/license.txt",
				"/home/ben/Dropbox/cs307/impromptune/Zong/readme.md",
				"/home/ben/Dropbox/cs471/hw/hw1/turnin/ai_writeups_hw#1.txt",
				"/home/ben/.cache/.fr-JHrNZO/lab3-src-kbd/keyboard-example.c",
				"/home/ben/.cache/.fr-ZiOHhV/lab3-src-kbd/read-line-example.c",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/README",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/files/aaa",
				"/home/ben/.cache/.fr-xPCPdl/lab5-src/daytime-server.cc",
				"/home/ben/Dropbox/cs252/summer fall 2014/lsgrep.c",
				"/home/ben/.cache/.fr-xApoTT/lab5-src/http-root-dir/cgi-src/util.c",
				"/home/ben/.cache/.fr-qBOrcj/lab5-src/http-root-dir/cgi-src/imagemap.c",
				"/home/ben/.cache/.fr-I9AwIM/lab5-src/http-root-dir/cgi-src/jj.c",
				"/home/ben/.cache/.fr-maDbJ3/lab5-src/http-root-dir/cgi-src/phf.c",
				"/home/ben/.cache/.fr-WF8FQx/lab5-src/http-root-dir/cgi-src/post-query.c",
				"/home/ben/.cache/.fr-GBwtMc/lab5-src/http-root-dir/cgi-src/query.c",
				"/home/ben/.cache/.fr-67qNy1/lab5-src/http-root-dir/cgi-src/util.c",
				"/home/ben/.cache/.fr-iTDGao/lab5-src/http-root-dir/cgi-src/change-passwd.c",
				"/home/ben/.cache/.fr-UFWo9N/lab3-src-kbd/read-line.c",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.yy",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/func_decl.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/func_decl.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/Makefile",
				"/home/ben/Desktop/idea-IU-139.1117.1/Install-Linux-tar.txt",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/ast.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.ll",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/symtab.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/symtab.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/test.f",
				"/home/ben/Dropbox/cs252/calculator_example/ast.cc",
				"/home/ben/Dropbox/cs252/calculator_example/symtab.cc",
				"/home/ben/Dropbox/cs252/calculator_example/doc.txt",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.yy",
				"/home/ben/Dropbox/cs252/calculator_example/calculator.y",
				"/home/ben/Dropbox/cs252/lab1-src/Queue.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz_cpp",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.output",
				"/home/ben/Dropbox/cs252/lab2-src/Makefile",
				"/home/ben/Dropbox/cs252/lab2-src/fiz.ll",
				"/home/ben/Dropbox/cs471/hw/notes on 2 player ai",
				"/home/ben/Dropbox/cs252/lab2-src/test_dump.txt",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.output",
				"/home/ben/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/ben/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/home/ben/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
				"/home/ben/Dropbox/cs252/lab2-src/symtab.h",
				"/home/ben/Dropbox/work/NER.java",
				"/home/ben/Dropbox/cs252/lab1-src/List.cc",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.tab.cc",
				"/home/ben/.cache/.fr-lFtYgM/Source.cpp",
				"/home/ben/.cache/.fr-ShaTo5/cpp-code/hws/Circle.C",
				"/home/ben/Dropbox/c repo/count_inversions.c",
				"/home/ben/.cache/.fr-AUqpgt/cpp-code/mydean/04.Search/C++Code/Search/State.C",
				"/home/ben/.cache/.fr-yZp9iV/cpp-code/mydean/04.Search/C++Code/Search/ids.C",
				"/home/ben/Dropbox/cs471/hw/hw1/class MissonariesAndCannibals {",
				"/home/ben/.cache/.fr-ajl7qj/Source.cpp",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/Makefile",
				"/home/ben/Dropbox/cs252/lab1-src/pitfalls.cpp",
				"/home/ben/Dropbox/cs251/lab4-src/search-engine.cpp",
				"/home/ben/.cache/.fr-qoKoBm/waffleshop.y",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/ast.h",
				"/home/ben/Dropbox/cs252/lab1-src/myclasses.cc",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/calculator.y",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/calculator.l"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"arg",
					"keybinding",
					"”",
					"“",
					"‘",
					"yyerror",
					"yyerr",
					"yyerrok",
					"_outputFile",
					"echo",
					"kill",
					"printT",
					"print",
					"CREAT",
					"creat",
					"comman",
					"stdout",
					"background",
					"backgr",
					"background",
					"out",
					"inFile",
					"resolve",
					"addS",
					"Sym",
					"finds",
					"find",
					"symbol",
					"glob",
					"erma",
					"resolve(",
					"astvar",
					"assign",
					"0",
					"astArg",
					"2",
					"0",
					"resolved",
					"trace",
					"numbers",
					"eval",
					"failed",
					"get",
					"resol",
					"type",
					"adding",
					"addin",
					"add",
					"shit",
					"ad",
					"getTex",
					"getText",
					"addarg",
					"getTex",
					"addA",
					"args",
					"resol",
					"getTy",
					"fprint",
					"astdec",
					"astinc",
					"getTe",
					"gette",
					"body",
					"halt",
					"\n    ",
					"    class ASTNode *node;\n",
					"astFunc",
					"prompt",
					"l   t",
					"l	t",
					"l t",
					"lt",
					"yye",
					"yy",
					"syntax",
					"lt",
					"delete",
					"body",
					"AST",
					"print",
					"@",
					"open",
					"opened",
					"open",
					"close",
					"yyvsp",
					"error",
					"eval",
					"yypar",
					"eval",
					"syntax",
					"ifzValues",
					" \n",
					":\n",
					"l.",
					"remove",
					"_head",
					"l.",
					"2",
					"target",
					" *&",
					")s",
					"S",
					"s",
					"pop",
					"push",
					" {",
					"script",
					"wines",
					"synth",
					"wordC",
					"sp",
					"movq",
					"OutputStream stdin = p.getOutputStream();\n		// InputStream stdout = p.getInputStream();\n\n		// BufferedReader reader = new BufferedReader (new InputStreamReader(stdout));\n		// Buf",
					"}\n",
					"()];",
					"rawTF",
					"compute",
					"docu",
					"test",
					"resultC",
					"kNN",
					"resultf",
					"aNumber",
					"midifile",
					"freq",
					"compute"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 0.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 186.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 147.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 960.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"st",
						"stderr"
					],
					[
						"yy",
						"yytext"
					],
					[
						"p",
						"prefix"
					],
					[
						"expa",
						"expandWildcard"
					],
					[
						"c",
						"component"
					],
					[
						"reg_",
						"regex_t"
					],
					[
						"fo",
						"for"
					],
					[
						"ST",
						"STDOUT_FILENO"
					],
					[
						"_",
						"_simpleCommands"
					],
					[
						"chil",
						"childPid"
					],
					[
						"Exec",
						"execvp"
					],
					[
						"pr",
						"printf	printf …"
					],
					[
						"def",
						"defaultin"
					],
					[
						"prin",
						"printenv"
					],
					[
						"sim",
						"_simpleCommands"
					],
					[
						"wait",
						"waitpid"
					],
					[
						"S",
						"STDERR_FILENO"
					],
					[
						"re",
						"redirect"
					],
					[
						"out",
						"outfd"
					],
					[
						"er",
						"_errFile"
					],
					[
						"_n",
						"_numberOfSimpleCommands"
					],
					[
						"get",
						"getName"
					],
					[
						"sym",
						"foundSymbol"
					],
					[
						"ass",
						"assignValue"
					],
					[
						"glo",
						"global_env"
					],
					[
						"AS",
						"ASTNode"
					],
					[
						"gl",
						"global_env"
					],
					[
						"set",
						"setFuncName"
					],
					[
						"ifz",
						"ifz_node"
					],
					[
						"dec",
						"dec_node"
					],
					[
						"inc",
						"inc_node"
					],
					[
						"arg",
						"arg_node"
					],
					[
						"as",
						"assignValue"
					],
					[
						"res",
						"resolved"
					],
					[
						"f",
						"funcName"
					],
					[
						"rs",
						"resolved"
					],
					[
						"a",
						"arg_node"
					],
					[
						"reso",
						"resolve"
					],
					[
						"A",
						"ASTNode"
					],
					[
						"getF",
						"getFuncName"
					],
					[
						"func",
						"funcName"
					],
					[
						"fun",
						"funcName"
					],
					[
						"cu",
						"currentFunc"
					],
					[
						"FUN",
						"FUNC_DECL"
					],
					[
						"nu",
						"numArgs"
					],
					[
						"num",
						"numArgs"
					],
					[
						"getA",
						"getArgNameByIndex"
					],
					[
						"C",
						"CFLAGS"
					],
					[
						"ast",
						"ast_decl"
					],
					[
						"c_",
						"c_args"
					],
					[
						"NO",
						"nodeType"
					],
					[
						"N",
						"NUMBER"
					],
					[
						"add",
						"addArg"
					],
					[
						"node",
						"nodeType"
					],
					[
						"no",
						"nodeType"
					],
					[
						"exp",
						"exprs"
					],
					[
						"Var",
						"VAR"
					],
					[
						"ex",
						"exprs"
					],
					[
						"str",
						"string_val"
					],
					[
						"AST",
						"ASTNode"
					],
					[
						"cl",
						"CLOSEPAR"
					],
					[
						"EX",
						"exprs"
					],
					[
						"ne",
						"_next"
					],
					[
						"vi",
						"vDivOther"
					],
					[
						"M",
						"MEM_HEAP"
					],
					[
						"MEM_",
						"MEM_STACK"
					],
					[
						"tesr",
						"test_part2"
					],
					[
						"cre",
						"create_and_free"
					],
					[
						"h",
						"hamsalad"
					],
					[
						"strd",
						"strdup32"
					],
					[
						"st1",
						"str1"
					],
					[
						"tes",
						"test_queue"
					],
					[
						"de",
						"dequeue"
					],
					[
						"si",
						"size_t"
					],
					[
						"wo",
						"workspace_backup"
					],
					[
						"co",
						"compFunc"
					],
					[
						"test_",
						"test_stack"
					],
					[
						"mys",
						"mystack"
					],
					[
						"test",
						"test_stack"
					],
					[
						"new",
						"newNode"
					],
					[
						"Lis",
						"ListNode"
					],
					[
						"eleme",
						"elementSize"
					],
					[
						"ele",
						"elementSize"
					],
					[
						"au",
						"autoCorrelation"
					],
					[
						"ab",
						"abAudioData"
					],
					[
						"note",
						"noteIndexToString"
					],
					[
						"ca",
						"calcOctave"
					],
					[
						"b",
						"buildIntervals"
					],
					[
						"getT",
						"getTripletEighthNoteTicks"
					],
					[
						"getTrip",
						"getTripletSixteenthNoteTicks"
					],
					[
						"inter",
						"buildIntervals"
					],
					[
						"midi",
						"midiNoteIndex"
					],
					[
						"Cr",
						"ChromaticScale"
					],
					[
						"o",
						"octave"
					],
					[
						"pri",
						"println"
					],
					[
						"pl",
						"playChord"
					],
					[
						"min",
						"minorSteps"
					],
					[
						"majo",
						"majorSteps"
					],
					[
						"mi",
						"minorSteps"
					],
					[
						"Mi",
						"MidiEditor"
					],
					[
						"m",
						"majorScale"
					],
					[
						"ma",
						"majorSteps"
					],
					[
						"String",
						"StringBuilder"
					],
					[
						"Midi",
						"MidiMessage"
					],
					[
						"wr",
						"writer"
					],
					[
						"write",
						"writeResults"
					],
					[
						"wav",
						"parsonCodeWav"
					],
					[
						"file",
						"fileName"
					],
					[
						"Proe",
						"ProcessBuilder"
					],
					[
						"quer",
						"queryDatabase"
					],
					[
						"pars",
						"parsonCode"
					],
					[
						"Str",
						"StringBuilder"
					],
					[
						"Ke",
						"KeyEvent"
					],
					[
						"K",
						"KeyEvent"
					],
					[
						"r",
						"recording"
					],
					[
						"match",
						"matchBit"
					],
					[
						"sta",
						"state"
					],
					[
						"E",
						"Exception"
					],
					[
						"que",
						"queryDatabase"
					],
					[
						"St",
						"StringTokenizer"
					],
					[
						"com",
						"compOne"
					],
					[
						"l",
						"len1"
					],
					[
						"rea",
						"read_buf"
					],
					[
						"read",
						"read_buf"
					],
					[
						"read_",
						"read_count"
					],
					[
						"read_buf",
						"read_buf_size"
					],
					[
						"printU",
						"printUsage"
					],
					[
						"len",
						"lenStr2"
					]
				]
			},
			"buffers":
			[
			],
			"build_system": "Packages/C++/C++.sublime-build",
			"command_palette":
			{
				"height": 392.0,
				"selected_items":
				[
					[
						"ins",
						"Package Control: Install Package"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"lin",
						"SublimeLinter: Enable Debug Mode"
					],
					[
						"lint",
						"SublimeLinter: Show All Errors"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"",
						"Package Control: Install Package"
					],
					[
						"pack",
						"Package Control: Install Package"
					]
				],
				"width": 467.0
			},
			"console":
			{
				"height": 594.0,
				"history":
				[
					"mport urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/ben/Dropbox/cs252/lab3-src"
			],
			"file_history":
			[
				"/home/ben/Dropbox/cs252/lab3-src/wildcards.cc",
				"/home/ben/Dropbox/cs252/lab3-src/command.cc",
				"/home/ben/Dropbox/cs252/lab3-src/shell.l",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/hah.key",
				"/home/ben/Dropbox/cs252/lab3-src/regular.cc",
				"/home/ben/Dropbox/cs252/lab3-src/Makefile",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/Makefile",
				"/home/ben/Dropbox/cs252/lab3-src/shell.y",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testall",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test1",
				"/home/ben/Dropbox/cs471/hw/hw3.txt",
				"/home/ben/Dropbox/notes.txt",
				"/home/ben/Dropbox/numbers.txt",
				"/home/ben/Dropbox/mergesort.cpp",
				"/home/ben/volwheel-0.2.8/install.sh",
				"/home/ben/.config/openbox/rc.xml",
				"/home/ben/.config/openbox/menu.xml",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testio",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testpipes",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testzombies",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testenv",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testwordschars",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testcd",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testwildcards",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testquotesescape",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testctlc",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testrobustness",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testsubshell",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/testtilde",
				"/home/ben/.conky/startconky.sh",
				"/home/ben/Downloads/Ardis Basic Icon Theme/Ardis Basic Icon Theme/index.theme",
				"/home/ben/Downloads/Ardis Basic Icon Theme/index.theme",
				"/home/ben/.cache/.fr-6S3NiM/conkyrings/README",
				"/home/ben/bin/conky/clock_rings.lua",
				"/home/ben/.conky/config_0",
				"/home/ben/Dropbox/cs252/lab3-src/csh-in",
				"/home/ben/Desktop/conkyrings/startconky.sh",
				"/home/ben/.cache/.fr-rbvhDB/conkyrings/README",
				"/home/ben/.cache/.fr-M6INEa/conkyrings/notes",
				"/home/ben/Dropbox/cs307/impromptune/backup/Composition.java",
				"/home/ben/Dropbox/cs307/impromptune/backup/NoteHandler.java",
				"/home/ben/Dropbox/cs307/impromptune/backup/Sandbox.java",
				"/home/ben/Dropbox/ma265/hw4.txt",
				"/home/ben/Dropbox/ma265/hw3.txt",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test4",
				"/home/ben/Dropbox/cs252/lab3-src/README",
				"/home/ben/Dropbox/cs252/lab3-src/command.h",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test15",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/test13",
				"/home/ben/Dropbox/cs252/lab2-src/test.f",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/ast.h",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.ll",
				"/home/ben/Dropbox/cs252/lab2-src/fiz.yy",
				"/home/ben/Dropbox/cs252/lab3-src/readme",
				"/home/ben/Dropbox/cs307/impromptune/Zong/desktop/build/classes/main/com/xenoage/zong/desktop/io/mp3/out/Mp3ScoreDocFileOutput.class",
				"/home/ben/Dropbox/cs240/projectD/reader.c",
				"/home/ben/Dropbox/cs252/lab3-src/out",
				"/home/ben/Dropbox/cs252/summer fall 2014/detect_cycle.cpp",
				"/home/ben/Dropbox/cs252/lab3-src/lsgrep.c",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/grammar_tests",
				"/home/ben/Dropbox/cs252/lab3-src/ctrl-c.cc",
				"/home/ben/Dropbox/cs471/hw/hw2.txt",
				"/home/ben/Dropbox/cs307/impromptune/Zong/license.txt",
				"/home/ben/Dropbox/cs307/impromptune/Zong/readme.md",
				"/home/ben/Dropbox/cs471/hw/hw1/turnin/ai_writeups_hw#1.txt",
				"/home/ben/.cache/.fr-JHrNZO/lab3-src-kbd/keyboard-example.c",
				"/home/ben/.cache/.fr-ZiOHhV/lab3-src-kbd/read-line-example.c",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/README",
				"/home/ben/Dropbox/cs252/lab3-src/test-shell/files/aaa",
				"/home/ben/.cache/.fr-xPCPdl/lab5-src/daytime-server.cc",
				"/home/ben/Dropbox/cs252/summer fall 2014/lsgrep.c",
				"/home/ben/.cache/.fr-xApoTT/lab5-src/http-root-dir/cgi-src/util.c",
				"/home/ben/.cache/.fr-qBOrcj/lab5-src/http-root-dir/cgi-src/imagemap.c",
				"/home/ben/.cache/.fr-I9AwIM/lab5-src/http-root-dir/cgi-src/jj.c",
				"/home/ben/.cache/.fr-maDbJ3/lab5-src/http-root-dir/cgi-src/phf.c",
				"/home/ben/.cache/.fr-WF8FQx/lab5-src/http-root-dir/cgi-src/post-query.c",
				"/home/ben/.cache/.fr-GBwtMc/lab5-src/http-root-dir/cgi-src/query.c",
				"/home/ben/.cache/.fr-67qNy1/lab5-src/http-root-dir/cgi-src/util.c",
				"/home/ben/.cache/.fr-iTDGao/lab5-src/http-root-dir/cgi-src/change-passwd.c",
				"/home/ben/.cache/.fr-UFWo9N/lab3-src-kbd/read-line.c",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.yy",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/func_decl.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/func_decl.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/Makefile",
				"/home/ben/Desktop/idea-IU-139.1117.1/Install-Linux-tar.txt",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/ast.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.ll",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/symtab.h",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/symtab.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/test.f",
				"/home/ben/Dropbox/cs252/calculator_example/ast.cc",
				"/home/ben/Dropbox/cs252/calculator_example/symtab.cc",
				"/home/ben/Dropbox/cs252/calculator_example/doc.txt",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.yy",
				"/home/ben/Dropbox/cs252/calculator_example/calculator.y",
				"/home/ben/Dropbox/cs252/lab1-src/Queue.cc",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz_cpp",
				"/home/ben/Dropbox/cs252/lab2-src/gitrepo/lab2-src/fiz.output",
				"/home/ben/Dropbox/cs252/lab2-src/Makefile",
				"/home/ben/Dropbox/cs252/lab2-src/fiz.ll",
				"/home/ben/Dropbox/cs471/hw/notes on 2 player ai",
				"/home/ben/Dropbox/cs252/lab2-src/test_dump.txt",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.output",
				"/home/ben/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/ben/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/home/ben/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
				"/home/ben/Dropbox/cs252/lab2-src/symtab.h",
				"/home/ben/Dropbox/work/NER.java",
				"/home/ben/Dropbox/cs252/lab1-src/List.cc",
				"/home/ben/Dropbox/cs252/lab2-src/fiz_cpp.tab.cc",
				"/home/ben/.cache/.fr-lFtYgM/Source.cpp",
				"/home/ben/.cache/.fr-ShaTo5/cpp-code/hws/Circle.C",
				"/home/ben/Dropbox/c repo/count_inversions.c",
				"/home/ben/.cache/.fr-AUqpgt/cpp-code/mydean/04.Search/C++Code/Search/State.C",
				"/home/ben/.cache/.fr-yZp9iV/cpp-code/mydean/04.Search/C++Code/Search/ids.C",
				"/home/ben/Dropbox/cs471/hw/hw1/class MissonariesAndCannibals {",
				"/home/ben/.cache/.fr-ajl7qj/Source.cpp",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/Makefile",
				"/home/ben/Dropbox/cs252/lab1-src/pitfalls.cpp",
				"/home/ben/Dropbox/cs251/lab4-src/search-engine.cpp",
				"/home/ben/.cache/.fr-qoKoBm/waffleshop.y",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/ast.cc",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/ast.h",
				"/home/ben/Dropbox/cs252/lab1-src/myclasses.cc",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/calculator.y",
				"/home/ben/Dropbox/cs252/lab2-src/calculator_example/calculator.l"
			],
			"find":
			{
				"height": 25.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"arg",
					"keybinding",
					"”",
					"“",
					"‘",
					"yyerror",
					"yyerr",
					"yyerrok",
					"_outputFile",
					"echo",
					"kill",
					"printT",
					"print",
					"CREAT",
					"creat",
					"comman",
					"stdout",
					"background",
					"backgr",
					"background",
					"out",
					"inFile",
					"resolve",
					"addS",
					"Sym",
					"finds",
					"find",
					"symbol",
					"glob",
					"erma",
					"resolve(",
					"astvar",
					"assign",
					"0",
					"astArg",
					"2",
					"0",
					"resolved",
					"trace",
					"numbers",
					"eval",
					"failed",
					"get",
					"resol",
					"type",
					"adding",
					"addin",
					"add",
					"shit",
					"ad",
					"getTex",
					"getText",
					"addarg",
					"getTex",
					"addA",
					"args",
					"resol",
					"getTy",
					"fprint",
					"astdec",
					"astinc",
					"getTe",
					"gette",
					"body",
					"halt",
					"\n    ",
					"    class ASTNode *node;\n",
					"astFunc",
					"prompt",
					"l   t",
					"l	t",
					"l t",
					"lt",
					"yye",
					"yy",
					"syntax",
					"lt",
					"delete",
					"body",
					"AST",
					"print",
					"@",
					"open",
					"opened",
					"open",
					"close",
					"yyvsp",
					"error",
					"eval",
					"yypar",
					"eval",
					"syntax",
					"ifzValues",
					" \n",
					":\n",
					"l.",
					"remove",
					"_head",
					"l.",
					"2",
					"target",
					" *&",
					")s",
					"S",
					"s",
					"pop",
					"push",
					" {",
					"script",
					"wines",
					"synth",
					"wordC",
					"sp",
					"movq",
					"OutputStream stdin = p.getOutputStream();\n		// InputStream stdout = p.getInputStream();\n\n		// BufferedReader reader = new BufferedReader (new InputStreamReader(stdout));\n		// Buf",
					"}\n",
					"()];",
					"rawTF",
					"compute",
					"docu",
					"test",
					"resultC",
					"kNN",
					"resultf",
					"aNumber",
					"midifile",
					"freq",
					"compute"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"follow_symlinks": true,
					"path": "/home/ben/Dropbox/cs252/lab3-src"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
					]
				}
			],
			"incremental_find":
			{
				"height": 25.0
			},
			"input":
			{
				"height": 0.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 186.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"position": "0,0,0,0,0,321,0,1281,844,1600,900",
			"project": "",
			"replace":
			{
				"height": 46.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 147.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 163,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/home/ben/workspace/r/fastr/com.oracle.truffle.r.nodes/src/com/oracle/truffle/r/nodes/builtin/base/untitled.sublime-workspace",
			"/home/ben/workspace/r/fastr/com.oracle.truffle.r.nodes/src/com/oracle/truffle/r/nodes/builtin/base/r_working.sublime-workspace"
		]
	}
}
